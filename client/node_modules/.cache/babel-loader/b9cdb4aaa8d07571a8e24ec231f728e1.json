{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stama\\\\Desktop\\\\Coding\\\\Portofolio-React\\\\client\\\\src\\\\Portofoliocontainer\\\\Home\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../Utilities/commonUtils\";\nimport ScrollService from \"../../../Utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster;\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }; // IF MORE THAN 1 SCREEN DISPLAY SPACE FUNCTION\n\n\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-options\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-options-seperator\"; // SHOW NAME OF COMP MARKED AS SELECTED WHEN CLICKED\n\n    if (selectedScreen === index) classes += \"Selected-header-option\";\n    return;\n  }; // IMPLEMENT THE SWITCH BETWEEN THE SCREENS\n\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return; // if it does scroll\n\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-option\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"headerr-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"../../../assets/home/logo.jpg\",\n          alt: \"no internet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","getHeaderOptions","map","screen","i","getHeaderOptionsClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior"],"sources":["C:/Users/Stama/Desktop/Coding/Portofolio-React/client/src/Portofoliocontainer/Home/Header/Header.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  TOTAL_SCREENS,\r\n  GET_SCREEN_INDEX,\r\n} from \"../../../Utilities/commonUtils\";\r\nimport ScrollService from \"../../../Utilities/ScrollService\";\r\nimport { faBars } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header() {\r\n  const [selectedScreen, setSelectedScreen] = useState(0);\r\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\r\n\r\n  const updateCurrentScreen = (currentScreen) => {\r\n    if (!currentScreen || !currentScreen.screenInView) return;\r\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\r\n    if (screenIndex < 0) return;\r\n  };\r\n\r\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster;\r\n\r\n  const getHeaderOptions = () => {\r\n    return TOTAL_SCREENS.map((screen, i) => (\r\n      <div\r\n        key={screen.screen_name}\r\n        className={getHeaderOptionsClass(i)}\r\n        onClick={() => switchScreen(i, screen)}\r\n      >\r\n        <span>{screen.screen_name}</span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  // IF MORE THAN 1 SCREEN DISPLAY SPACE FUNCTION\r\n  const getHeaderOptionsClass = (index) => {\r\n    let classes = \"header-options\";\r\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-options-seperator\";\r\n\r\n    // SHOW NAME OF COMP MARKED AS SELECTED WHEN CLICKED\r\n    if (selectedScreen === index) classes += \"Selected-header-option\";\r\n    return;\r\n  };\r\n\r\n  // IMPLEMENT THE SWITCH BETWEEN THE SCREENS\r\n  const switchScreen = (index, screen) => {\r\n    let screenComponent = document.getElementById(screen.screen_name);\r\n    if (!screenComponent) return;\r\n\r\n    // if it does scroll\r\n    screenComponent.scrollIntoView({ behavior: \"smooth\" });\r\n    setSelectedScreen(index);\r\n    setShowHeaderOptions(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"header-option\"\r\n      onClick={() => setShowHeaderOptions(!showHeaderOptions)}\r\n    >\r\n      <div className=\"header-parent\">\r\n        <div\r\n          className=\"header-hamburger\"\r\n          onClick={() => setShowHeaderOptions(!showHeaderOptions)}\r\n        >\r\n          <FontAwesomeIcon className=\"headerr-hamburger-bars\" icon={faBars} />\r\n        </div>\r\n        <div className=\"header-logo\">\r\n          <img src=\"../../../assets/home/logo.jpg\" alt=\"no internet\"></img>\r\n        </div>\r\n        <div\r\n          className={\r\n            showHeaderOptions\r\n              ? \"header-options show-hamburger-options\"\r\n              : \"header-options\"\r\n          }\r\n        >\r\n          {getHeaderOptions()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}